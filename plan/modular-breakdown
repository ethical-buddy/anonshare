🧩 Modules Breakdown
1. NodeManager

    Peer discovery

    libp2p host management

    Session key handling

2. MetadataHandler

    Metadata creation, signing

    Gossiping logic

    Local index update (via DB)

3. TransferAgent

    Transfer requests/responses

    QUIC/uTP file pipe

    Bandwidth throttling, retries

4. StorageEngine

    Encrypted file storage

    Hash-based lookup

    Optional TTL

5. PrivacyCore

    Encryption utils

    Session key generator

    Optional pluggable routing/obfuscation

6. GUI/TUI

    GUI using Wails/Tauri

    TUI for CLI users with tview

    Search, browse, upload, download interfaces



    🔁 Protocol Design
🔄 Metadata Gossip (custom libp2p PubSub)

    Each node subscribes to a topic like meta/<random-id>

    Periodic rebroadcast of unseen metadata

    Optional LRU cache to prevent duplicates

🔒 Transfer Protocol

    Based on libp2p stream with Noise encryption

    Each transfer has:

        Handshake with session key

        Chunked transfer with hash checks

        Timeout & retry

🎨 GUI / CLI Design
GUI (Wails or Tauri)

    Home: List of available files (filterable by tags)

    Upload: File picker, metadata entry

    Downloads: Ongoing/downloaded files

    Settings: Toggle auto-share, view cache size, etc.

CLI (TUI)

$ ghostshare
> Browse Files
> Upload File
> Download <file-hash>
> View Logs

