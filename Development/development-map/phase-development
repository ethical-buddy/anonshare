âœ… Phase 1A â€” Core Bootstrap & Identity

core/app.go: Init lifecycle and signal management

config/config.go: YAML or JSON config parser

node/identity.go: Ephemeral keypair (Ed25519 or NaCl)

    core/logger.go: Colorized log output, debug/info/warn/error

âœ… Phase 1B â€” Metadata Storage + Format

metadata/metadata.go: Define metadata struct (UUID, tags, desc, hash)

metadata/db.go: SQLite-based DB (List, Add, Search)

    privacy/obfuscation.go: Obfuscate timestamp or size

âœ… Phase 1C â€” Gossip Layer

gossip/gossip.go: Peer-to-peer metadata exchange

    gossip/sync.go: Sync strategy: Bloom filter / last-modified time

âœ… Phase 1D â€” Network + Discovery

network/discovery.go: Bootstrap peer list using libp2p DHT (or UDP broadcast LAN fallback)

    network/transport.go: Base transport layer over TCP/QUIC

âœ… Phase 1E â€” Secure File Transfer

transfer/send.go: Read, encrypt, and stream file

transfer/receive.go: Decrypt and write file

    privacy/crypto.go: NaCl box/secretbox-based encryption

âœ… Phase 1F â€” TUI Frontend

frontend/tui/ui.go: TUI init, routing

    frontend/tui/pages/: Modular pages

        Upload

        Search

        Transfers

        Status

ðŸ§ª Phase 1G â€” Integration + Test

    Hook up metadata sharing via gossip

    Verify 2 nodes can sync metadata

    Upload from one node, download on another anonymously

    Manual tests with TUI and CLI logs


